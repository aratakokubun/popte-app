'use strict';

export const FONT_MAP: Map<string, string> = new Map<string, string>([
  ['ア', '3'],
  ['イ', 'e'],
  ['ウ', '4'],
  ['エ', '5'],
  ['オ', '6'],
  ['カ', 't'],
  ['キ', 'g'],
  ['ク', 'h'],
  ['ケ', ':'],
  ['コ', 'b'],
  ['サ', 'x'],
  ['シ', 'd'],
  ['ス', 'r'],
  ['セ', 'p'],
  ['ソ', 'c'],
  ['タ', 'q'],
  ['チ', 'a'],
  ['ツ', 'z'],
  ['テ', 'w'],
  ['ト', 's'],
  ['ナ', 'u'],
  ['ニ', 'i'],
  ['ヌ', '1'],
  ['ネ', ','],
  ['ノ', 'k'],
  ['ハ', 'f'],
  ['ヒ', 'v'],
  ['フ', '2'],
  ['ヘ', '^'],
  ['ホ', '-'],
  ['マ', 'j'],
  ['ミ', 'n'],
  ['ム', ']'],
  ['メ', '/'],
  ['モ', 'm'],
  ['ヤ', '7'],
  ['ユ', '8'],
  ['ヨ', '9'],
  ['ラ', 'o'],
  ['リ', 'l'],
  ['ル', '.'],
  ['レ', ';'],
  ['ロ', 'N'],
  ['ワ', '0'],
  ['ヲ', '}'],
  ['ン', 'y'],
  ['ヴ', '?'],
  ['ガ', 'J'],
  ['ギ', 'G'],
  ['グ', 'H'],
  ['ゲ', '*'],
  ['ゴ', 'B'],
  ['ザ', 'X'],
  ['ジ', 'D'],
  ['ズ', 'R'],
  ['ゼ', 'P'],
  ['ゾ', 'C'],
  ['ダ', 'Q'],
  ['ヂ', 'A'],
  ['ヅ', 'M'],
  ['デ', 'W'],
  ['ド', 'S'],
  ['バ', 'F'],
  ['ビ', 'V'],
  ['ブ', '\”'],
  ['ベ', '`'],
  ['ボ', '='],
  ['パ', 'U'],
  ['ピ', 'I'],
  ['プ', '!'],
  ['ペ', '<'],
  ['ポ', 'K'],
  ['ァ', '#'],
  ['ィ', 'E'],
  ['ゥ', '$'],
  ['ェ', '%'],
  ['ォ', '&'],
  ['ャ', '\''],
  ['ュ', '('],
  ['ョ', ')'],
  ['ッ', 'Z'],
  ['ー', '['],
  ['.', 'Y'],
  ['!', '+'],
]);

export class FontUtils {
  constructor(
  ) { }

  public static convertForPopte(fromString: string): string {
    const converted = new Array<string>();
    for (const s of fromString.split('')) {
      if (FONT_MAP.has(s)) {
        converted.push(FONT_MAP.get(s));
      } else {
        converted.push(s);
      }
    }
    return converted.join('');
  }
}
